subcode: ver1
    $call load_4_b

    $(for:i in 0-3)
        $local a: __m256d
        a = _mm256_load_pd(pA)
        $(for:j in 0-3)
            $local a2: __m256d
            a2 = _mm256_mul_pd(a, b$(j))
            $call sum_a, a2, (pC+$(j))
        $call adjust_pA_pC, $(i)

    subcode: adjust_pA_pC(i)
        $(if:i<3)
            pA+=M
            pC+=M
        $(else)
            pA-=M*3
            pC-=M*3

    subcode: load_4_b
        $local b0,b1,b2,b3: __m256d
        $(block:mult_2_init)
            $local v1: __m256i
            v1 = _mm256_set_epi64x(3*M, 2*M, M, 0)
        $(for:0-3)
            b$1 = _mm256_i64gather_pd(pB+$1, v1, 8)

    subcode: sum_a(a, C)
        $(if:1)
            $local lo, hi, h2: __m128d
            lo = _mm256_castpd256_pd128($(a));
            hi = _mm256_extractf128_pd($(a), 1);
            lo = _mm_add_pd(lo, hi);
            h2 = _mm_unpackhi_pd(lo, lo);
            h2 = _mm_add_sd(h2, lo);
            *$(C) += _mm_cvtsd_f64(h2)
        $(else)
            *$(C) = _mm256_cvtsd_f64($(a))

