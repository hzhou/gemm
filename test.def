include: common.def
include: matrix.def
include: simple.def
include: ver3.def

macros:
    N: 10000

page: test
    module: c
    use_double: 1
    CC: gcc -std=c99 -O2 -mavx2 -g
    # CC: icc -std=c99 -O3

    $(if:0)
        $call create_random
    $(elif:0)
        $call run_check, 8
    $(else)
        $call run_test, 1000

subcode: mult_2_common
    $sumcode(M*M) C[i]=0.0

    $include <immintrin.h>
    $local p_A, p_B, p_C: double *
    $(for:A,B,C)
        p$1 = $1
    DUMP_STUB mult_2_init

subcode: mult_2
    $call @mult_2_common
    $(if:0)
        $call ver0
    $(else)
        $call mult_2_4x4

subcode: mult_2_4x4
    $call @mult_2_common
    # C[i,j] += A[i,k] * B[k,j]
    $for i=0:M:4
        pA = A + i * M
        $for k=0:M:4
            pB = B + k * M
            pC = C + i * M
            $for j=0:M:4
                $call mult_4x4
                pB += 4
                pC += 4
            pA += 4

    subcode: mult_4x4
        $call ver3

subcode: mult_3
    $call mult_blas
