macros:
    ver0: 1

subcode: ver0
    $call mult_2_common

    $local v: __m256i
    v = _mm256_set_epi64x(3*M, 2*M, M, 0)

    $local a, b, a2: __m256d
    $for i=0:M
        $for j=0:M
            pA = A + i*M
            pB = B + j
            a2 = _mm256_setzero_pd()
            $for jj=0:M:4
                a = _mm256_load_pd(pA+jj)
                b = _mm256_i64gather_pd(pB+jj*M, v, 8)
                a2 = _mm256_add_pd(a2, _mm256_mul_pd(a, b))
            $call sum_a2, pC
            pC++

    subcode: sum_a2(C)
        $local lo, hi, h2: __m128d
        lo = _mm256_castpd256_pd128(a2);
        hi = _mm256_extractf128_pd(a2, 1);
        lo = _mm_add_pd(lo, hi);
        h2 = _mm_unpackhi_pd(lo, lo);
        h2 = _mm_add_sd(h2, lo);
        _mm_store_sd($(C), h2)
