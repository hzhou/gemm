macros:
    ver_4x4: ver2

subcode: ver2
    $call load_b

    $local a: __m256d
    $(for:i in 0-3)
        $call load_c
        a  = _mm256_load_pd(pA)
        $(for:j in 0-3)
            a2 = _mm256_add_pd(a2, _mm256_mul_pd(a, b$(j)))
            $(if:j<3)
                a  = _mm256_permute4x64_pd(a, $(c2103))
        $call store_c
        $(for:A,C)
            $(if:i<3)
                p$1+=M
            $(else)
                p$1-=M*3

    macros:
        c3210: 0xe4  # identity
        c2103: 0x93  # rotate 1

    subcode: load_c
        $local c: __m256d
        c = _mm256_load_pd(pC)

    subcode: store_c
        _mm256_store_pd(pC, c)

    subcode: load_b
        $local b0,b1,b2,b3: __m256d
        $local v: __m256i
        $(for:0-3)
            v = _mm256_set_epi64x($(v$1))
            b$1 = _mm256_i64gather_pd(pB, v, 8)

        macros:
            v0: 3*M+3, 2*M+2, M+1, 0
            v1: 2*M+3, M+2, 1, 3*M+0
            v2: M+3, 2, 3*M+1, 2*M+0
            v3: 3, 3*M+2, 2*M+1, M+0
